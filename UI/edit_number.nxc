/*
* edit_number.nxc
*
* This library provide a function to edit a number.
*
* The function takes as arguments the int variable to edit,
* the step value used to increase or decrease the value,
* a maximum value and a minimum value.
*
*/
void editNumber(int &number, const int &step, const int &max, const int &min) {
  bool looping = false;
  //Wait for the release of the center button (if pressed)
  while(ButtonState(BTNCENTER));

  while(!ButtonState(BTNCENTER)) {
    //clear the display
    RectOut(0,0,DISPLAY_WIDTH,DISPLAY_HEIGHT,DRAW_OPT_FILL_SHAPE|DRAW_OPT_INVERT);
    string display;
    //Show only '-' or '+' if max or min are reached
    if(number==max)
      display = FormatNum("- %d  ", number);
    else if(number==min)
      display = FormatNum("  %d +", number);
    else
      display = FormatNum("- %d +", number);
    TextOut((DISPLAY_WIDTH-strlen(display)*6)/2, (DISPLAY_HEIGHT-8)/2, display);
    //Wait until left, right or center button is pressed
    while(!ButtonState(BTNLEFT)&&!ButtonState(BTNRIGHT)&&!ButtonState(BTNCENTER));
    //Exit when center button is pressed
    if(ButtonState(BTNCENTER))
      return;

    //Decrease the number by step if left button is pressed
    if(ButtonState(BTNLEFT)) {
      number-=step;
      if(number<min)
        number=min;
    }
    
    //Increase the number by step if right button is pressed
    else if(ButtonState(BTNRIGHT)) {
      number+=step;
      if(number>max)
        number=max;
    }
    
    //Wait some time before continuing,
    //wait 500ms if the button was pressed and released immediatly released
    //wait 200ms if the button was already pressed in the previous loop iteration
    unsigned long time = looping?CurrentTick()+200:CurrentTick()+500;
    while(ButtonState(BTNLEFT)||ButtonState(BTNRIGHT)) {
      if(CurrentTick()>time) {
        looping=true;
        break;
      }
    }
    //Stop the speed increase/decrease if the button is released
    if(!ButtonState(BTNLEFT)&&!ButtonState(BTNRIGHT))
      looping=false;
  }

}
